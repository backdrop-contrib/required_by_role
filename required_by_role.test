<?php

/**
 * @file
 * Tests for the Administration menu module.
 */

/**
 * Base class for all required by role web test cases.
 */
class RequiredByRoleWebTestCase extends DrupalWebTestCase {

  protected $basePermissions = array(
    'access content',
    'create article content',
    'edit any article content',
    'administer content types',
    'administer nodes',
  );

  function setUp() {
    $modules = func_get_args();
    if (isset($modules[0]) && is_array($modules[0])) {
      $modules = $modules[0];
    }
    $modules[] = 'required_by_role';
    parent::setUp($modules);

    // Create Basic page and Article node types.
    if ($this->profile != 'standard') {
      $this->drupalCreateContentType(array('type' => 'page', 'name' => 'Basic page'));
      $this->drupalCreateContentType(array('type' => 'article', 'name' => 'Article'));
    }
  }

  function _bool2text($bool){
    return $bool ? 'TRUE' : 'FALSE';
  }
}

class RequiredByRoleFieldUiFormWebTestCase extends RequiredByRoleWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Required field setting by role',
      'description' => 'Tests "required" field setting in site roles.',
      'group' => 'Required by role',
    );
  }

  function setUp() {
    parent::setUp();
    $web_user = $this->drupalCreateUser($this->basePermissions);
    $this->drupalLogin($web_user);
  }

  function testFieldRequiredSetting(){

    $instance = array();
    $instance['bundle'] = 'article';
    $instance['entity_type'] = 'node';
    $instance['field_name'] = 'body';

    $required = FALSE;

    // Ensure at the benning is FALSE
    $this->_setFieldRequiredSetting($instance, $required);
    $info = field_read_instance($instance['entity_type'], $instance['field_name'], $instance['bundle']);
    $message = t('At this point required setting value should be !boolean.' , array('!boolean' => $this->_bool2text($required)));
    $this->assertTrue($info['required'] === $required, $message);

    // Set setting to TRUE
    $required = TRUE;
    $this->_setFieldRequiredSetting($instance, $required);

    $info = field_read_instance($instance['entity_type'], $instance['field_name'], $instance['bundle']);
    $message = t('At this point required setting value should be !boolean.' , array('!boolean' => $this->_bool2text($required)));
    $this->assertTrue($info['required'] === $required, $message);


  }

  function _setFieldRequiredSetting($instance, $required){

    $instance_source = field_read_instance($instance['entity_type'], $instance['field_name'], $instance['bundle']);
    $instance_source['required'] = $required;
    field_update_instance($instance_source);
  }

}
